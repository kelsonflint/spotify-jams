(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{172:function(e,t,a){},173:function(e,t,a){},174:function(e,t,a){},175:function(e,t,a){},176:function(e,t,a){},177:function(e,t,a){},178:function(e,t,a){},179:function(e,t,a){"use strict";a.r(t);var s=a(0),r=a.n(s),n=a(77),i=a.n(n);a(172),a(173),a(174),a(175);var c=class extends r.a.Component{constructor(e){super(e),this.addTrack=this.addTrack.bind(this),this.removeTrack=this.removeTrack.bind(this)}addTrack(e){this.props.onAdd(this.props.track)}removeTrack(e){this.props.onRemove(this.props.track)}renderAction(){return this.props.isRemoval?r.a.createElement("button",{className:"Track-action",onClick:this.removeTrack},"-"):r.a.createElement("button",{className:"Track-action",onClick:this.addTrack},"+")}render(){return r.a.createElement("div",{className:"Track"},r.a.createElement("div",{className:"Track-information"},r.a.createElement("h3",null,this.props.track.name),r.a.createElement("p",null,this.props.track.artist," | ",this.props.track.album)),this.renderAction())}};var o=class extends r.a.Component{render(){return r.a.createElement("div",{className:"TrackList"},this.props.tracks.map(e=>r.a.createElement(c,{track:e,key:e.id,onAdd:this.props.onAdd,isRemoval:this.props.isRemoval,onRemove:this.props.onRemove})))}};var l=class extends r.a.Component{constructor(e){super(e),this.handleNameChange=this.handleNameChange.bind(this)}handleNameChange(e){this.props.onNameChange(e.target.value)}render(){return r.a.createElement("div",{className:"Playlist"},r.a.createElement("input",{onChange:this.handleNameChange,defaultValue:"New Playlist"}),r.a.createElement(o,{tracks:this.props.playlistTracks,isRemoval:!0,onRemove:this.props.onRemove}),r.a.createElement("button",{className:"Playlist-save",onClick:this.props.onSave},"SAVE TO SPOTIFY"))}};a(176);var h=class extends r.a.Component{constructor(e){super(e),this.state={term:""},this.handleTermChange=this.handleTermChange.bind(this),this.search=this.search.bind(this)}handleTermChange(e){this.setState({term:e.target.value})}search(){this.props.onSearch(this.state.term)}render(){return r.a.createElement("div",{className:"SearchBar"},r.a.createElement("input",{placeholder:"Enter A Song Title",onChange:this.handleTermChange}),r.a.createElement("button",{className:"SearchButton",onClick:this.search},"SEARCH"))}};a(177);var m=class extends r.a.Component{render(){return r.a.createElement("div",{className:"SearchResults"},r.a.createElement("h2",null,"Results"),r.a.createElement(o,{tracks:this.props.searchResults,onAdd:this.props.onAdd}))}};let d;const p={getAccessToken(){if(d)return d;const e=window.location.href.match(/access_token=([^&]*)/),t=window.location.href.match(/expires_in=([^&]*)/);if(e&&t){d=e[1];const a=Number(t[1]);return window.setTimeout(()=>d="",1e3*a),window.history.pushState("Access Token",null,"/"),d}{const e="https://accounts.spotify.com/authorize?client_id=".concat("4e8971907df843ec82be5cb047aa44a7","&response_type=token&scope=playlist-modify-public&redirect_uri=").concat("http://localhost:3000/");window.location=e}},search(e){const t=p.getAccessToken();return fetch("https://api.spotify.com/v1/search?type=track&q=".concat(e),{headers:{Authorization:"Bearer ".concat(t)}}).then(e=>e.json()).then(e=>e.tracks?e.tracks.items.map(e=>({id:e.id,name:e.name,artist:e.artists[0].name,album:e.album.name,uri:e.uri})):[])},savePlaylist(e,t){if(!e||!t.length)return;const a=p.getAccessToken(),s={Authorization:"Bearer ".concat(a)};let r;return fetch("https://api.spotify.com/v1/me",{headers:s}).then(e=>e.json()).then(a=>(r=a.id,fetch("https://api.spotify.com/v1/users/".concat(r,"/playlists"),{headers:s,method:"POST",body:JSON.stringify({name:e})}).then(e=>e.json()).then(e=>{const a=e.id;return fetch("https://api.spotify.com/v1/users/".concat(r,"/playlists/").concat(a,"/tracks"),{headers:s,method:"POST",body:JSON.stringify({uris:t})})})))}};var u=p;var k=class extends r.a.Component{constructor(e){super(e),this.state={searchResults:[],playlistName:"New Playlist",playlistTracks:[]},this.search=this.search.bind(this),this.addTrack=this.addTrack.bind(this),this.removeTrack=this.removeTrack.bind(this),this.updatePlaylistName=this.updatePlaylistName.bind(this),this.savePlaylist=this.savePlaylist.bind(this)}search(e){u.search(e).then(e=>{this.setState({searchResults:e})})}addTrack(e){let t=this.state.playlistTracks;t.find(t=>t.id===e.id)||(t.push(e),this.setState({playlistTracks:t}))}removeTrack(e){let t=this.state.playlistTracks;t=t.filter(t=>t.id!==e.id),this.setState({playlistTracks:t})}updatePlaylistName(e){this.setState({playlistName:e})}savePlaylist(){const e=this.state.playlistTracks.map(e=>e.uri);u.savePlaylist(this.state.playlistName,e).then(()=>{this.setState({playlistName:"New Playlist",playlistTracks:[]})})}render(){return r.a.createElement("div",null,r.a.createElement("h1",null,"Ja",r.a.createElement("span",{className:"highlight"},"mmm"),"ing"),r.a.createElement("div",{className:"App"},r.a.createElement(h,{onSearch:this.search}),r.a.createElement("div",{className:"App-playlist"},r.a.createElement(m,{searchResults:this.state.searchResults,onAdd:this.addTrack}),r.a.createElement(l,{playlistName:this.state.playlistName,playlistTracks:this.state.playlistTracks,onNameChange:this.updatePlaylistName,onRemove:this.removeTrack,onSave:this.savePlaylist}))))}};a(178);i.a.render(r.a.createElement(k,null),document.getElementById("root")),"serviceWorker"in navigator&&window.addEventListener("load",()=>{const e="".concat("","/service-worker.js");navigator.serviceWorker.register(e).then(e=>{e.onupdatefound=(()=>{const t=e.installing;t.onstatechange=(()=>{"installed"===t.state&&(navigator.serviceWorker.controller?console.log("New content is available; please refresh."):console.log("Content is cached for offline use."))})})}).catch(e=>{console.error("Error during service worker registration:",e)})})},78:function(e,t,a){e.exports=a(179)}},[[78,1,2]]]);
//# sourceMappingURL=main.ed8818cd.chunk.js.map